//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("OrgSQLModel", "FK_Prizivnik_Годности", "Годности", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OtherBase.Годности), "Prizivnik", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OtherBase.Призывник), true)]
[assembly: EdmRelationshipAttribute("OrgSQLModel", "FK_Prizivnik_Отсрочка", "Отсрочка", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OtherBase.Отсрочка), "Prizivnik", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OtherBase.Призывник), true)]
[assembly: EdmRelationshipAttribute("OrgSQLModel", "FK_Prizivnik_Район", "Район", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OtherBase.Район), "Prizivnik", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OtherBase.Призывник), true)]
[assembly: EdmRelationshipAttribute("OrgSQLModel", "FK_Обследование_Prizivnik", "Prizivnik", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OtherBase.Призывник), "Обследование", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OtherBase.Обследование), true)]
[assembly: EdmRelationshipAttribute("OrgSQLModel", "FK_Родитель_ToTable", "Prizivnik", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OtherBase.Призывник), "Родитель", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OtherBase.Родитель), true)]
[assembly: EdmRelationshipAttribute("OrgSQLModel", "FK_Розыск_Prizivnik", "Prizivnik", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OtherBase.Призывник), "Розыск", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OtherBase.Розыск), true)]
[assembly: EdmRelationshipAttribute("OrgSQLModel", "IDРодства_ТипРодства", "ТипРодства", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OtherBase.ТипРодства), "Родитель", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OtherBase.Родитель), true)]

#endregion

namespace OtherBase
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class OrgSQLEntities2 : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект OrgSQLEntities2, используя строку соединения из раздела "OrgSQLEntities2" файла конфигурации приложения.
        /// </summary>
        public OrgSQLEntities2() : base("name=OrgSQLEntities2", "OrgSQLEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта OrgSQLEntities2.
        /// </summary>
        public OrgSQLEntities2(string connectionString) : base(connectionString, "OrgSQLEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта OrgSQLEntities2.
        /// </summary>
        public OrgSQLEntities2(EntityConnection connection) : base(connection, "OrgSQLEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Призывник> Prizivnik
        {
            get
            {
                if ((_Prizivnik == null))
                {
                    _Prizivnik = base.CreateObjectSet<Призывник>("Prizivnik");
                }
                return _Prizivnik;
            }
        }
        private ObjectSet<Призывник> _Prizivnik;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Voenkomat> Voenkomat
        {
            get
            {
                if ((_Voenkomat == null))
                {
                    _Voenkomat = base.CreateObjectSet<Voenkomat>("Voenkomat");
                }
                return _Voenkomat;
            }
        }
        private ObjectSet<Voenkomat> _Voenkomat;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Годности> Годности
        {
            get
            {
                if ((_Годности == null))
                {
                    _Годности = base.CreateObjectSet<Годности>("Годности");
                }
                return _Годности;
            }
        }
        private ObjectSet<Годности> _Годности;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Обследование> Обследование
        {
            get
            {
                if ((_Обследование == null))
                {
                    _Обследование = base.CreateObjectSet<Обследование>("Обследование");
                }
                return _Обследование;
            }
        }
        private ObjectSet<Обследование> _Обследование;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Отсрочка> Отсрочка
        {
            get
            {
                if ((_Отсрочка == null))
                {
                    _Отсрочка = base.CreateObjectSet<Отсрочка>("Отсрочка");
                }
                return _Отсрочка;
            }
        }
        private ObjectSet<Отсрочка> _Отсрочка;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Район> Район
        {
            get
            {
                if ((_Район == null))
                {
                    _Район = base.CreateObjectSet<Район>("Район");
                }
                return _Район;
            }
        }
        private ObjectSet<Район> _Район;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Родитель> Родитель
        {
            get
            {
                if ((_Родитель == null))
                {
                    _Родитель = base.CreateObjectSet<Родитель>("Родитель");
                }
                return _Родитель;
            }
        }
        private ObjectSet<Родитель> _Родитель;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Розыск> Розыск
        {
            get
            {
                if ((_Розыск == null))
                {
                    _Розыск = base.CreateObjectSet<Розыск>("Розыск");
                }
                return _Розыск;
            }
        }
        private ObjectSet<Розыск> _Розыск;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ТипРодства> ТипРодства
        {
            get
            {
                if ((_ТипРодства == null))
                {
                    _ТипРодства = base.CreateObjectSet<ТипРодства>("ТипРодства");
                }
                return _ТипРодства;
            }
        }
        private ObjectSet<ТипРодства> _ТипРодства;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Prizivnik. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPrizivnik(Призывник призывник)
        {
            base.AddObject("Prizivnik", призывник);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Voenkomat. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToVoenkomat(Voenkomat voenkomat)
        {
            base.AddObject("Voenkomat", voenkomat);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Годности. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToГодности(Годности годности)
        {
            base.AddObject("Годности", годности);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Обследование. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToОбследование(Обследование обследование)
        {
            base.AddObject("Обследование", обследование);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Отсрочка. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToОтсрочка(Отсрочка отсрочка)
        {
            base.AddObject("Отсрочка", отсрочка);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Район. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToРайон(Район район)
        {
            base.AddObject("Район", район);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Родитель. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToРодитель(Родитель родитель)
        {
            base.AddObject("Родитель", родитель);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Розыск. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToРозыск(Розыск розыск)
        {
            base.AddObject("Розыск", розыск);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ТипРодства. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToТипРодства(ТипРодства типРодства)
        {
            base.AddObject("ТипРодства", типРодства);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrgSQLModel", Name="Voenkomat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Voenkomat : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Voenkomat.
        /// </summary>
        /// <param name="наименование_военкомата">Исходное значение свойства Наименование_военкомата.</param>
        /// <param name="iDВоенкомата">Исходное значение свойства IDВоенкомата.</param>
        public static Voenkomat CreateVoenkomat(global::System.String наименование_военкомата, global::System.Int32 iDВоенкомата)
        {
            Voenkomat voenkomat = new Voenkomat();
            voenkomat.Наименование_военкомата = наименование_военкомата;
            voenkomat.IDВоенкомата = iDВоенкомата;
            return voenkomat;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Наименование_военкомата
        {
            get
            {
                return _Наименование_военкомата;
            }
            set
            {
                OnНаименование_военкоматаChanging(value);
                ReportPropertyChanging("Наименование_военкомата");
                _Наименование_военкомата = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Наименование_военкомата");
                OnНаименование_военкоматаChanged();
            }
        }
        private global::System.String _Наименование_военкомата;
        partial void OnНаименование_военкоматаChanging(global::System.String value);
        partial void OnНаименование_военкоматаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Адрес
        {
            get
            {
                return _Адрес;
            }
            set
            {
                OnАдресChanging(value);
                ReportPropertyChanging("Адрес");
                _Адрес = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Адрес");
                OnАдресChanged();
            }
        }
        private global::System.String _Адрес;
        partial void OnАдресChanging(global::System.String value);
        partial void OnАдресChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDВоенкомата
        {
            get
            {
                return _IDВоенкомата;
            }
            set
            {
                if (_IDВоенкомата != value)
                {
                    OnIDВоенкоматаChanging(value);
                    ReportPropertyChanging("IDВоенкомата");
                    _IDВоенкомата = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDВоенкомата");
                    OnIDВоенкоматаChanged();
                }
            }
        }
        private global::System.Int32 _IDВоенкомата;
        partial void OnIDВоенкоматаChanging(global::System.Int32 value);
        partial void OnIDВоенкоматаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDРайона
        {
            get
            {
                return _IDРайона;
            }
            set
            {
                OnIDРайонаChanging(value);
                ReportPropertyChanging("IDРайона");
                _IDРайона = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDРайона");
                OnIDРайонаChanged();
            }
        }
        private Nullable<global::System.Int32> _IDРайона;
        partial void OnIDРайонаChanging(Nullable<global::System.Int32> value);
        partial void OnIDРайонаChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrgSQLModel", Name="Годности")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Годности : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Годности.
        /// </summary>
        /// <param name="iDГодности">Исходное значение свойства IDГодности.</param>
        public static Годности CreateГодности(global::System.Int32 iDГодности)
        {
            Годности годности = new Годности();
            годности.IDГодности = iDГодности;
            return годности;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDГодности
        {
            get
            {
                return _IDГодности;
            }
            set
            {
                if (_IDГодности != value)
                {
                    OnIDГодностиChanging(value);
                    ReportPropertyChanging("IDГодности");
                    _IDГодности = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDГодности");
                    OnIDГодностиChanged();
                }
            }
        }
        private global::System.Int32 _IDГодности;
        partial void OnIDГодностиChanging(global::System.Int32 value);
        partial void OnIDГодностиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Обозначение
        {
            get
            {
                return _Обозначение;
            }
            set
            {
                OnОбозначениеChanging(value);
                ReportPropertyChanging("Обозначение");
                _Обозначение = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Обозначение");
                OnОбозначениеChanged();
            }
        }
        private global::System.String _Обозначение;
        partial void OnОбозначениеChanging(global::System.String value);
        partial void OnОбозначениеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Описание
        {
            get
            {
                return _Описание;
            }
            set
            {
                OnОписаниеChanging(value);
                ReportPropertyChanging("Описание");
                _Описание = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Описание");
                OnОписаниеChanged();
            }
        }
        private global::System.String _Описание;
        partial void OnОписаниеChanging(global::System.String value);
        partial void OnОписаниеChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrgSQLModel", "FK_Prizivnik_Годности", "Prizivnik")]
        public EntityCollection<Призывник> Prizivnik
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Призывник>("OrgSQLModel.FK_Prizivnik_Годности", "Prizivnik");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Призывник>("OrgSQLModel.FK_Prizivnik_Годности", "Prizivnik", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrgSQLModel", Name="Обследование")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Обследование : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Обследование.
        /// </summary>
        /// <param name="iDобследования">Исходное значение свойства IDобследования.</param>
        public static Обследование CreateОбследование(global::System.Int32 iDобследования)
        {
            Обследование обследование = new Обследование();
            обследование.IDобследования = iDобследования;
            return обследование;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDобследования
        {
            get
            {
                return _IDобследования;
            }
            set
            {
                if (_IDобследования != value)
                {
                    OnIDобследованияChanging(value);
                    ReportPropertyChanging("IDобследования");
                    _IDобследования = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDобследования");
                    OnIDобследованияChanged();
                }
            }
        }
        private global::System.Int32 _IDобследования;
        partial void OnIDобследованияChanging(global::System.Int32 value);
        partial void OnIDобследованияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Фамилия_Имя_Отчество
        {
            get
            {
                return _Фамилия_Имя_Отчество;
            }
            set
            {
                OnФамилия_Имя_ОтчествоChanging(value);
                ReportPropertyChanging("Фамилия_Имя_Отчество");
                _Фамилия_Имя_Отчество = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Фамилия_Имя_Отчество");
                OnФамилия_Имя_ОтчествоChanged();
            }
        }
        private global::System.String _Фамилия_Имя_Отчество;
        partial void OnФамилия_Имя_ОтчествоChanging(global::System.String value);
        partial void OnФамилия_Имя_ОтчествоChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_рождения
        {
            get
            {
                return _Дата_рождения;
            }
            set
            {
                OnДата_рожденияChanging(value);
                ReportPropertyChanging("Дата_рождения");
                _Дата_рождения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_рождения");
                OnДата_рожденияChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_рождения;
        partial void OnДата_рожденияChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_рожденияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_направления
        {
            get
            {
                return _Дата_направления;
            }
            set
            {
                OnДата_направленияChanging(value);
                ReportPropertyChanging("Дата_направления");
                _Дата_направления = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_направления");
                OnДата_направленияChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_направления;
        partial void OnДата_направленияChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_направленияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Кто_направил
        {
            get
            {
                return _Кто_направил;
            }
            set
            {
                OnКто_направилChanging(value);
                ReportPropertyChanging("Кто_направил");
                _Кто_направил = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Кто_направил");
                OnКто_направилChanged();
            }
        }
        private global::System.String _Кто_направил;
        partial void OnКто_направилChanging(global::System.String value);
        partial void OnКто_направилChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Диагноз
        {
            get
            {
                return _Диагноз;
            }
            set
            {
                OnДиагнозChanging(value);
                ReportPropertyChanging("Диагноз");
                _Диагноз = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Диагноз");
                OnДиагнозChanged();
            }
        }
        private global::System.String _Диагноз;
        partial void OnДиагнозChanging(global::System.String value);
        partial void OnДиагнозChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Лечебное_учереждение
        {
            get
            {
                return _Лечебное_учереждение;
            }
            set
            {
                OnЛечебное_учереждениеChanging(value);
                ReportPropertyChanging("Лечебное_учереждение");
                _Лечебное_учереждение = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Лечебное_учереждение");
                OnЛечебное_учереждениеChanged();
            }
        }
        private global::System.String _Лечебное_учереждение;
        partial void OnЛечебное_учереждениеChanging(global::System.String value);
        partial void OnЛечебное_учереждениеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_получения_акта
        {
            get
            {
                return _Дата_получения_акта;
            }
            set
            {
                OnДата_получения_актаChanging(value);
                ReportPropertyChanging("Дата_получения_акта");
                _Дата_получения_акта = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_получения_акта");
                OnДата_получения_актаChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_получения_акта;
        partial void OnДата_получения_актаChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_получения_актаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_прибытия_после_обследования
        {
            get
            {
                return _Дата_прибытия_после_обследования;
            }
            set
            {
                OnДата_прибытия_после_обследованияChanging(value);
                ReportPropertyChanging("Дата_прибытия_после_обследования");
                _Дата_прибытия_после_обследования = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_прибытия_после_обследования");
                OnДата_прибытия_после_обследованияChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_прибытия_после_обследования;
        partial void OnДата_прибытия_после_обследованияChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_прибытия_после_обследованияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Номер_протокола
        {
            get
            {
                return _Номер_протокола;
            }
            set
            {
                OnНомер_протоколаChanging(value);
                ReportPropertyChanging("Номер_протокола");
                _Номер_протокола = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Номер_протокола");
                OnНомер_протоколаChanged();
            }
        }
        private global::System.String _Номер_протокола;
        partial void OnНомер_протоколаChanging(global::System.String value);
        partial void OnНомер_протоколаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Решение_ПК
        {
            get
            {
                return _Решение_ПК;
            }
            set
            {
                OnРешение_ПКChanging(value);
                ReportPropertyChanging("Решение_ПК");
                _Решение_ПК = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Решение_ПК");
                OnРешение_ПКChanged();
            }
        }
        private global::System.String _Решение_ПК;
        partial void OnРешение_ПКChanging(global::System.String value);
        partial void OnРешение_ПКChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_передачи_в_2_ОТД
        {
            get
            {
                return _Дата_передачи_в_2_ОТД;
            }
            set
            {
                OnДата_передачи_в_2_ОТДChanging(value);
                ReportPropertyChanging("Дата_передачи_в_2_ОТД");
                _Дата_передачи_в_2_ОТД = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_передачи_в_2_ОТД");
                OnДата_передачи_в_2_ОТДChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_передачи_в_2_ОТД;
        partial void OnДата_передачи_в_2_ОТДChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_передачи_в_2_ОТДChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_обращения_за_ВБ
        {
            get
            {
                return _Дата_обращения_за_ВБ;
            }
            set
            {
                OnДата_обращения_за_ВБChanging(value);
                ReportPropertyChanging("Дата_обращения_за_ВБ");
                _Дата_обращения_за_ВБ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_обращения_за_ВБ");
                OnДата_обращения_за_ВБChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_обращения_за_ВБ;
        partial void OnДата_обращения_за_ВБChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_обращения_за_ВБChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_получения_ВБ
        {
            get
            {
                return _Дата_получения_ВБ;
            }
            set
            {
                OnДата_получения_ВБChanging(value);
                ReportPropertyChanging("Дата_получения_ВБ");
                _Дата_получения_ВБ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_получения_ВБ");
                OnДата_получения_ВБChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_получения_ВБ;
        partial void OnДата_получения_ВБChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_получения_ВБChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Примечание
        {
            get
            {
                return _Примечание;
            }
            set
            {
                OnПримечаниеChanging(value);
                ReportPropertyChanging("Примечание");
                _Примечание = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Примечание");
                OnПримечаниеChanged();
            }
        }
        private global::System.String _Примечание;
        partial void OnПримечаниеChanging(global::System.String value);
        partial void OnПримечаниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDПризывника
        {
            get
            {
                return _IDПризывника;
            }
            set
            {
                OnIDПризывникаChanging(value);
                ReportPropertyChanging("IDПризывника");
                _IDПризывника = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDПризывника");
                OnIDПризывникаChanged();
            }
        }
        private Nullable<global::System.Int32> _IDПризывника;
        partial void OnIDПризывникаChanging(Nullable<global::System.Int32> value);
        partial void OnIDПризывникаChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrgSQLModel", "FK_Обследование_Prizivnik", "Prizivnik")]
        public Призывник Prizivnik
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Призывник>("OrgSQLModel.FK_Обследование_Prizivnik", "Prizivnik").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Призывник>("OrgSQLModel.FK_Обследование_Prizivnik", "Prizivnik").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Призывник> PrizivnikReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Призывник>("OrgSQLModel.FK_Обследование_Prizivnik", "Prizivnik");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Призывник>("OrgSQLModel.FK_Обследование_Prizivnik", "Prizivnik", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrgSQLModel", Name="Отсрочка")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Отсрочка : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Отсрочка.
        /// </summary>
        /// <param name="iDОтсрочки">Исходное значение свойства IDОтсрочки.</param>
        public static Отсрочка CreateОтсрочка(global::System.Int32 iDОтсрочки)
        {
            Отсрочка отсрочка = new Отсрочка();
            отсрочка.IDОтсрочки = iDОтсрочки;
            return отсрочка;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDОтсрочки
        {
            get
            {
                return _IDОтсрочки;
            }
            set
            {
                if (_IDОтсрочки != value)
                {
                    OnIDОтсрочкиChanging(value);
                    ReportPropertyChanging("IDОтсрочки");
                    _IDОтсрочки = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDОтсрочки");
                    OnIDОтсрочкиChanged();
                }
            }
        }
        private global::System.Int32 _IDОтсрочки;
        partial void OnIDОтсрочкиChanging(global::System.Int32 value);
        partial void OnIDОтсрочкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Наименование
        {
            get
            {
                return _Наименование;
            }
            set
            {
                OnНаименованиеChanging(value);
                ReportPropertyChanging("Наименование");
                _Наименование = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Наименование");
                OnНаименованиеChanged();
            }
        }
        private global::System.String _Наименование;
        partial void OnНаименованиеChanging(global::System.String value);
        partial void OnНаименованиеChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrgSQLModel", "FK_Prizivnik_Отсрочка", "Prizivnik")]
        public EntityCollection<Призывник> Prizivnik
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Призывник>("OrgSQLModel.FK_Prizivnik_Отсрочка", "Prizivnik");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Призывник>("OrgSQLModel.FK_Prizivnik_Отсрочка", "Prizivnik", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrgSQLModel", Name="Призывник")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Призывник : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Призывник.
        /// </summary>
        /// <param name="iDПризывника">Исходное значение свойства IDПризывника.</param>
        public static Призывник CreateПризывник(global::System.Int32 iDПризывника)
        {
            Призывник призывник = new Призывник();
            призывник.IDПризывника = iDПризывника;
            return призывник;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDПризывника
        {
            get
            {
                return _IDПризывника;
            }
            set
            {
                if (_IDПризывника != value)
                {
                    OnIDПризывникаChanging(value);
                    ReportPropertyChanging("IDПризывника");
                    _IDПризывника = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDПризывника");
                    OnIDПризывникаChanged();
                }
            }
        }
        private global::System.Int32 _IDПризывника;
        partial void OnIDПризывникаChanging(global::System.Int32 value);
        partial void OnIDПризывникаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_последнего_изменения
        {
            get
            {
                return _Дата_последнего_изменения;
            }
            set
            {
                OnДата_последнего_измененияChanging(value);
                ReportPropertyChanging("Дата_последнего_изменения");
                _Дата_последнего_изменения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_последнего_изменения");
                OnДата_последнего_измененияChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_последнего_изменения;
        partial void OnДата_последнего_измененияChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_последнего_измененияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Фамилия
        {
            get
            {
                return _Фамилия;
            }
            set
            {
                OnФамилияChanging(value);
                ReportPropertyChanging("Фамилия");
                _Фамилия = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Фамилия");
                OnФамилияChanged();
            }
        }
        private global::System.String _Фамилия;
        partial void OnФамилияChanging(global::System.String value);
        partial void OnФамилияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Имя
        {
            get
            {
                return _Имя;
            }
            set
            {
                OnИмяChanging(value);
                ReportPropertyChanging("Имя");
                _Имя = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Имя");
                OnИмяChanged();
            }
        }
        private global::System.String _Имя;
        partial void OnИмяChanging(global::System.String value);
        partial void OnИмяChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Отчество
        {
            get
            {
                return _Отчество;
            }
            set
            {
                OnОтчествоChanging(value);
                ReportPropertyChanging("Отчество");
                _Отчество = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Отчество");
                OnОтчествоChanged();
            }
        }
        private global::System.String _Отчество;
        partial void OnОтчествоChanging(global::System.String value);
        partial void OnОтчествоChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_Рождения
        {
            get
            {
                return _Дата_Рождения;
            }
            set
            {
                OnДата_РожденияChanging(value);
                ReportPropertyChanging("Дата_Рождения");
                _Дата_Рождения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_Рождения");
                OnДата_РожденияChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_Рождения;
        partial void OnДата_РожденияChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_РожденияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_прибытия_в_военкомат
        {
            get
            {
                return _Дата_прибытия_в_военкомат;
            }
            set
            {
                OnДата_прибытия_в_военкоматChanging(value);
                ReportPropertyChanging("Дата_прибытия_в_военкомат");
                _Дата_прибытия_в_военкомат = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_прибытия_в_военкомат");
                OnДата_прибытия_в_военкоматChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_прибытия_в_военкомат;
        partial void OnДата_прибытия_в_военкоматChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_прибытия_в_военкоматChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Домашний_адрес__телефон
        {
            get
            {
                return _Домашний_адрес__телефон;
            }
            set
            {
                OnДомашний_адрес__телефонChanging(value);
                ReportPropertyChanging("Домашний_адрес__телефон");
                _Домашний_адрес__телефон = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Домашний_адрес__телефон");
                OnДомашний_адрес__телефонChanged();
            }
        }
        private global::System.String _Домашний_адрес__телефон;
        partial void OnДомашний_адрес__телефонChanging(global::System.String value);
        partial void OnДомашний_адрес__телефонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Фактический_адрес_телефон
        {
            get
            {
                return _Фактический_адрес_телефон;
            }
            set
            {
                OnФактический_адрес_телефонChanging(value);
                ReportPropertyChanging("Фактический_адрес_телефон");
                _Фактический_адрес_телефон = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Фактический_адрес_телефон");
                OnФактический_адрес_телефонChanged();
            }
        }
        private global::System.String _Фактический_адрес_телефон;
        partial void OnФактический_адрес_телефонChanging(global::System.String value);
        partial void OnФактический_адрес_телефонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Район
        {
            get
            {
                return _Район;
            }
            set
            {
                OnРайонChanging(value);
                ReportPropertyChanging("Район");
                _Район = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Район");
                OnРайонChanged();
            }
        }
        private Nullable<global::System.Int32> _Район;
        partial void OnРайонChanging(Nullable<global::System.Int32> value);
        partial void OnРайонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Семейное_положение
        {
            get
            {
                return _Семейное_положение;
            }
            set
            {
                OnСемейное_положениеChanging(value);
                ReportPropertyChanging("Семейное_положение");
                _Семейное_положение = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Семейное_положение");
                OnСемейное_положениеChanged();
            }
        }
        private global::System.String _Семейное_положение;
        partial void OnСемейное_положениеChanging(global::System.String value);
        partial void OnСемейное_положениеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Место_работы_должность_телефон
        {
            get
            {
                return _Место_работы_должность_телефон;
            }
            set
            {
                OnМесто_работы_должность_телефонChanging(value);
                ReportPropertyChanging("Место_работы_должность_телефон");
                _Место_работы_должность_телефон = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Место_работы_должность_телефон");
                OnМесто_работы_должность_телефонChanged();
            }
        }
        private global::System.String _Место_работы_должность_телефон;
        partial void OnМесто_работы_должность_телефонChanging(global::System.String value);
        partial void OnМесто_работы_должность_телефонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDВоенкомат
        {
            get
            {
                return _IDВоенкомат;
            }
            set
            {
                OnIDВоенкоматChanging(value);
                ReportPropertyChanging("IDВоенкомат");
                _IDВоенкомат = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDВоенкомат");
                OnIDВоенкоматChanged();
            }
        }
        private Nullable<global::System.Int32> _IDВоенкомат;
        partial void OnIDВоенкоматChanging(Nullable<global::System.Int32> value);
        partial void OnIDВоенкоматChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDОрганизации
        {
            get
            {
                return _IDОрганизации;
            }
            set
            {
                OnIDОрганизацииChanging(value);
                ReportPropertyChanging("IDОрганизации");
                _IDОрганизации = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDОрганизации");
                OnIDОрганизацииChanged();
            }
        }
        private Nullable<global::System.Int32> _IDОрганизации;
        partial void OnIDОрганизацииChanging(Nullable<global::System.Int32> value);
        partial void OnIDОрганизацииChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String профессия
        {
            get
            {
                return _профессия;
            }
            set
            {
                OnпрофессияChanging(value);
                ReportPropertyChanging("профессия");
                _профессия = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("профессия");
                OnпрофессияChanged();
            }
        }
        private global::System.String _профессия;
        partial void OnпрофессияChanging(global::System.String value);
        partial void OnпрофессияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Примечание
        {
            get
            {
                return _Примечание;
            }
            set
            {
                OnПримечаниеChanging(value);
                ReportPropertyChanging("Примечание");
                _Примечание = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Примечание");
                OnПримечаниеChanged();
            }
        }
        private global::System.String _Примечание;
        partial void OnПримечаниеChanging(global::System.String value);
        partial void OnПримечаниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDГодности
        {
            get
            {
                return _IDГодности;
            }
            set
            {
                OnIDГодностиChanging(value);
                ReportPropertyChanging("IDГодности");
                _IDГодности = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDГодности");
                OnIDГодностиChanged();
            }
        }
        private Nullable<global::System.Int32> _IDГодности;
        partial void OnIDГодностиChanging(Nullable<global::System.Int32> value);
        partial void OnIDГодностиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDОтсрочки
        {
            get
            {
                return _IDОтсрочки;
            }
            set
            {
                OnIDОтсрочкиChanging(value);
                ReportPropertyChanging("IDОтсрочки");
                _IDОтсрочки = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDОтсрочки");
                OnIDОтсрочкиChanged();
            }
        }
        private Nullable<global::System.Int32> _IDОтсрочки;
        partial void OnIDОтсрочкиChanging(Nullable<global::System.Int32> value);
        partial void OnIDОтсрочкиChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Алфавитный_номер
        {
            get
            {
                return _Алфавитный_номер;
            }
            set
            {
                OnАлфавитный_номерChanging(value);
                ReportPropertyChanging("Алфавитный_номер");
                _Алфавитный_номер = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Алфавитный_номер");
                OnАлфавитный_номерChanged();
            }
        }
        private global::System.String _Алфавитный_номер;
        partial void OnАлфавитный_номерChanging(global::System.String value);
        partial void OnАлфавитный_номерChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Место_обучения
        {
            get
            {
                return _Место_обучения;
            }
            set
            {
                OnМесто_обученияChanging(value);
                ReportPropertyChanging("Место_обучения");
                _Место_обучения = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Место_обучения");
                OnМесто_обученияChanged();
            }
        }
        private global::System.String _Место_обучения;
        partial void OnМесто_обученияChanging(global::System.String value);
        partial void OnМесто_обученияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Специальность
        {
            get
            {
                return _Специальность;
            }
            set
            {
                OnСпециальностьChanging(value);
                ReportPropertyChanging("Специальность");
                _Специальность = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Специальность");
                OnСпециальностьChanged();
            }
        }
        private global::System.String _Специальность;
        partial void OnСпециальностьChanging(global::System.String value);
        partial void OnСпециальностьChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_окончания_обучения
        {
            get
            {
                return _Дата_окончания_обучения;
            }
            set
            {
                OnДата_окончания_обученияChanging(value);
                ReportPropertyChanging("Дата_окончания_обучения");
                _Дата_окончания_обучения = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_окончания_обучения");
                OnДата_окончания_обученияChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_окончания_обучения;
        partial void OnДата_окончания_обученияChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_окончания_обученияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Номер_протокола
        {
            get
            {
                return _Номер_протокола;
            }
            set
            {
                OnНомер_протоколаChanging(value);
                ReportPropertyChanging("Номер_протокола");
                _Номер_протокола = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Номер_протокола");
                OnНомер_протоколаChanged();
            }
        }
        private global::System.String _Номер_протокола;
        partial void OnНомер_протоколаChanging(global::System.String value);
        partial void OnНомер_протоколаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Решение_Призывной_комиссии
        {
            get
            {
                return _Решение_Призывной_комиссии;
            }
            set
            {
                OnРешение_Призывной_комиссииChanging(value);
                ReportPropertyChanging("Решение_Призывной_комиссии");
                _Решение_Призывной_комиссии = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Решение_Призывной_комиссии");
                OnРешение_Призывной_комиссииChanged();
            }
        }
        private global::System.String _Решение_Призывной_комиссии;
        partial void OnРешение_Призывной_комиссииChanging(global::System.String value);
        partial void OnРешение_Призывной_комиссииChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_призыва
        {
            get
            {
                return _Дата_призыва;
            }
            set
            {
                OnДата_призываChanging(value);
                ReportPropertyChanging("Дата_призыва");
                _Дата_призыва = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_призыва");
                OnДата_призываChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_призыва;
        partial void OnДата_призываChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_призываChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_отправки_на_ВС
        {
            get
            {
                return _Дата_отправки_на_ВС;
            }
            set
            {
                OnДата_отправки_на_ВСChanging(value);
                ReportPropertyChanging("Дата_отправки_на_ВС");
                _Дата_отправки_на_ВС = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_отправки_на_ВС");
                OnДата_отправки_на_ВСChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_отправки_на_ВС;
        partial void OnДата_отправки_на_ВСChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_отправки_на_ВСChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Повестка
        {
            get
            {
                return _Повестка;
            }
            set
            {
                OnПовесткаChanging(value);
                ReportPropertyChanging("Повестка");
                _Повестка = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Повестка");
                OnПовесткаChanged();
            }
        }
        private Nullable<global::System.Boolean> _Повестка;
        partial void OnПовесткаChanging(Nullable<global::System.Boolean> value);
        partial void OnПовесткаChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrgSQLModel", "FK_Prizivnik_Годности", "Годности")]
        public Годности Годности
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Годности>("OrgSQLModel.FK_Prizivnik_Годности", "Годности").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Годности>("OrgSQLModel.FK_Prizivnik_Годности", "Годности").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Годности> ГодностиReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Годности>("OrgSQLModel.FK_Prizivnik_Годности", "Годности");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Годности>("OrgSQLModel.FK_Prizivnik_Годности", "Годности", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrgSQLModel", "FK_Prizivnik_Отсрочка", "Отсрочка")]
        public Отсрочка Отсрочка
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Отсрочка>("OrgSQLModel.FK_Prizivnik_Отсрочка", "Отсрочка").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Отсрочка>("OrgSQLModel.FK_Prizivnik_Отсрочка", "Отсрочка").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Отсрочка> ОтсрочкаReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Отсрочка>("OrgSQLModel.FK_Prizivnik_Отсрочка", "Отсрочка");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Отсрочка>("OrgSQLModel.FK_Prizivnik_Отсрочка", "Отсрочка", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrgSQLModel", "FK_Prizivnik_Район", "Район")]
        public Район Район1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Район>("OrgSQLModel.FK_Prizivnik_Район", "Район").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Район>("OrgSQLModel.FK_Prizivnik_Район", "Район").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Район> Район1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Район>("OrgSQLModel.FK_Prizivnik_Район", "Район");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Район>("OrgSQLModel.FK_Prizivnik_Район", "Район", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrgSQLModel", "FK_Обследование_Prizivnik", "Обследование")]
        public EntityCollection<Обследование> Обследование
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Обследование>("OrgSQLModel.FK_Обследование_Prizivnik", "Обследование");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Обследование>("OrgSQLModel.FK_Обследование_Prizivnik", "Обследование", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrgSQLModel", "FK_Родитель_ToTable", "Родитель")]
        public EntityCollection<Родитель> Родитель
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Родитель>("OrgSQLModel.FK_Родитель_ToTable", "Родитель");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Родитель>("OrgSQLModel.FK_Родитель_ToTable", "Родитель", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrgSQLModel", "FK_Розыск_Prizivnik", "Розыск")]
        public EntityCollection<Розыск> Розыск
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Розыск>("OrgSQLModel.FK_Розыск_Prizivnik", "Розыск");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Розыск>("OrgSQLModel.FK_Розыск_Prizivnik", "Розыск", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrgSQLModel", Name="Район")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Район : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Район.
        /// </summary>
        /// <param name="iDРайона">Исходное значение свойства IDРайона.</param>
        public static Район CreateРайон(global::System.Int32 iDРайона)
        {
            Район район = new Район();
            район.IDРайона = iDРайона;
            return район;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDРайона
        {
            get
            {
                return _IDРайона;
            }
            set
            {
                if (_IDРайона != value)
                {
                    OnIDРайонаChanging(value);
                    ReportPropertyChanging("IDРайона");
                    _IDРайона = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDРайона");
                    OnIDРайонаChanged();
                }
            }
        }
        private global::System.Int32 _IDРайона;
        partial void OnIDРайонаChanging(global::System.Int32 value);
        partial void OnIDРайонаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Субъект
        {
            get
            {
                return _Субъект;
            }
            set
            {
                OnСубъектChanging(value);
                ReportPropertyChanging("Субъект");
                _Субъект = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Субъект");
                OnСубъектChanged();
            }
        }
        private global::System.String _Субъект;
        partial void OnСубъектChanging(global::System.String value);
        partial void OnСубъектChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Город
        {
            get
            {
                return _Город;
            }
            set
            {
                OnГородChanging(value);
                ReportPropertyChanging("Город");
                _Город = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Город");
                OnГородChanged();
            }
        }
        private global::System.String _Город;
        partial void OnГородChanging(global::System.String value);
        partial void OnГородChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Название
        {
            get
            {
                return _Название;
            }
            set
            {
                OnНазваниеChanging(value);
                ReportPropertyChanging("Название");
                _Название = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Название");
                OnНазваниеChanged();
            }
        }
        private global::System.String _Название;
        partial void OnНазваниеChanging(global::System.String value);
        partial void OnНазваниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDВоенкомата
        {
            get
            {
                return _IDВоенкомата;
            }
            set
            {
                OnIDВоенкоматаChanging(value);
                ReportPropertyChanging("IDВоенкомата");
                _IDВоенкомата = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDВоенкомата");
                OnIDВоенкоматаChanged();
            }
        }
        private Nullable<global::System.Int32> _IDВоенкомата;
        partial void OnIDВоенкоматаChanging(Nullable<global::System.Int32> value);
        partial void OnIDВоенкоматаChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrgSQLModel", "FK_Prizivnik_Район", "Prizivnik")]
        public EntityCollection<Призывник> Prizivnik
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Призывник>("OrgSQLModel.FK_Prizivnik_Район", "Prizivnik");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Призывник>("OrgSQLModel.FK_Prizivnik_Район", "Prizivnik", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrgSQLModel", Name="Родитель")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Родитель : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Родитель.
        /// </summary>
        /// <param name="idРодителя">Исходное значение свойства IdРодителя.</param>
        public static Родитель CreateРодитель(global::System.Int32 idРодителя)
        {
            Родитель родитель = new Родитель();
            родитель.IdРодителя = idРодителя;
            return родитель;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdРодителя
        {
            get
            {
                return _IdРодителя;
            }
            set
            {
                if (_IdРодителя != value)
                {
                    OnIdРодителяChanging(value);
                    ReportPropertyChanging("IdРодителя");
                    _IdРодителя = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdРодителя");
                    OnIdРодителяChanged();
                }
            }
        }
        private global::System.Int32 _IdРодителя;
        partial void OnIdРодителяChanging(global::System.Int32 value);
        partial void OnIdРодителяChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Имя
        {
            get
            {
                return _Имя;
            }
            set
            {
                OnИмяChanging(value);
                ReportPropertyChanging("Имя");
                _Имя = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Имя");
                OnИмяChanged();
            }
        }
        private global::System.String _Имя;
        partial void OnИмяChanging(global::System.String value);
        partial void OnИмяChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Фамилия
        {
            get
            {
                return _Фамилия;
            }
            set
            {
                OnФамилияChanging(value);
                ReportPropertyChanging("Фамилия");
                _Фамилия = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Фамилия");
                OnФамилияChanged();
            }
        }
        private global::System.String _Фамилия;
        partial void OnФамилияChanging(global::System.String value);
        partial void OnФамилияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Отчество
        {
            get
            {
                return _Отчество;
            }
            set
            {
                OnОтчествоChanging(value);
                ReportPropertyChanging("Отчество");
                _Отчество = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Отчество");
                OnОтчествоChanged();
            }
        }
        private global::System.String _Отчество;
        partial void OnОтчествоChanging(global::System.String value);
        partial void OnОтчествоChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDРодства
        {
            get
            {
                return _IDРодства;
            }
            set
            {
                OnIDРодстваChanging(value);
                ReportPropertyChanging("IDРодства");
                _IDРодства = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDРодства");
                OnIDРодстваChanged();
            }
        }
        private Nullable<global::System.Int32> _IDРодства;
        partial void OnIDРодстваChanging(Nullable<global::System.Int32> value);
        partial void OnIDРодстваChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Телефон
        {
            get
            {
                return _Телефон;
            }
            set
            {
                OnТелефонChanging(value);
                ReportPropertyChanging("Телефон");
                _Телефон = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Телефон");
                OnТелефонChanged();
            }
        }
        private global::System.String _Телефон;
        partial void OnТелефонChanging(global::System.String value);
        partial void OnТелефонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDПризывника
        {
            get
            {
                return _IDПризывника;
            }
            set
            {
                OnIDПризывникаChanging(value);
                ReportPropertyChanging("IDПризывника");
                _IDПризывника = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDПризывника");
                OnIDПризывникаChanged();
            }
        }
        private Nullable<global::System.Int32> _IDПризывника;
        partial void OnIDПризывникаChanging(Nullable<global::System.Int32> value);
        partial void OnIDПризывникаChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrgSQLModel", "FK_Родитель_ToTable", "Prizivnik")]
        public Призывник Prizivnik
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Призывник>("OrgSQLModel.FK_Родитель_ToTable", "Prizivnik").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Призывник>("OrgSQLModel.FK_Родитель_ToTable", "Prizivnik").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Призывник> PrizivnikReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Призывник>("OrgSQLModel.FK_Родитель_ToTable", "Prizivnik");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Призывник>("OrgSQLModel.FK_Родитель_ToTable", "Prizivnik", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrgSQLModel", "IDРодства_ТипРодства", "ТипРодства")]
        public ТипРодства ТипРодства
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ТипРодства>("OrgSQLModel.IDРодства_ТипРодства", "ТипРодства").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ТипРодства>("OrgSQLModel.IDРодства_ТипРодства", "ТипРодства").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ТипРодства> ТипРодстваReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ТипРодства>("OrgSQLModel.IDРодства_ТипРодства", "ТипРодства");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ТипРодства>("OrgSQLModel.IDРодства_ТипРодства", "ТипРодства", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrgSQLModel", Name="Розыск")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Розыск : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Розыск.
        /// </summary>
        /// <param name="iDРозыска">Исходное значение свойства IDРозыска.</param>
        public static Розыск CreateРозыск(global::System.Int32 iDРозыска)
        {
            Розыск розыск = new Розыск();
            розыск.IDРозыска = iDРозыска;
            return розыск;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDРозыска
        {
            get
            {
                return _IDРозыска;
            }
            set
            {
                if (_IDРозыска != value)
                {
                    OnIDРозыскаChanging(value);
                    ReportPropertyChanging("IDРозыска");
                    _IDРозыска = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDРозыска");
                    OnIDРозыскаChanged();
                }
            }
        }
        private global::System.Int32 _IDРозыска;
        partial void OnIDРозыскаChanging(global::System.Int32 value);
        partial void OnIDРозыскаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDПризывника
        {
            get
            {
                return _IDПризывника;
            }
            set
            {
                OnIDПризывникаChanging(value);
                ReportPropertyChanging("IDПризывника");
                _IDПризывника = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDПризывника");
                OnIDПризывникаChanged();
            }
        }
        private Nullable<global::System.Int32> _IDПризывника;
        partial void OnIDПризывникаChanging(Nullable<global::System.Int32> value);
        partial void OnIDПризывникаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Номер_этапа
        {
            get
            {
                return _Номер_этапа;
            }
            set
            {
                OnНомер_этапаChanging(value);
                ReportPropertyChanging("Номер_этапа");
                _Номер_этапа = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Номер_этапа");
                OnНомер_этапаChanged();
            }
        }
        private Nullable<global::System.Int32> _Номер_этапа;
        partial void OnНомер_этапаChanging(Nullable<global::System.Int32> value);
        partial void OnНомер_этапаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Тип_розыска
        {
            get
            {
                return _Тип_розыска;
            }
            set
            {
                OnТип_розыскаChanging(value);
                ReportPropertyChanging("Тип_розыска");
                _Тип_розыска = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Тип_розыска");
                OnТип_розыскаChanged();
            }
        }
        private global::System.String _Тип_розыска;
        partial void OnТип_розыскаChanging(global::System.String value);
        partial void OnТип_розыскаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Дата_прибытия
        {
            get
            {
                return _Дата_прибытия;
            }
            set
            {
                OnДата_прибытияChanging(value);
                ReportPropertyChanging("Дата_прибытия");
                _Дата_прибытия = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Дата_прибытия");
                OnДата_прибытияChanged();
            }
        }
        private Nullable<global::System.DateTime> _Дата_прибытия;
        partial void OnДата_прибытияChanging(Nullable<global::System.DateTime> value);
        partial void OnДата_прибытияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Отметка_о_прибытии
        {
            get
            {
                return _Отметка_о_прибытии;
            }
            set
            {
                OnОтметка_о_прибытииChanging(value);
                ReportPropertyChanging("Отметка_о_прибытии");
                _Отметка_о_прибытии = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Отметка_о_прибытии");
                OnОтметка_о_прибытииChanged();
            }
        }
        private global::System.String _Отметка_о_прибытии;
        partial void OnОтметка_о_прибытииChanging(global::System.String value);
        partial void OnОтметка_о_прибытииChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Результат
        {
            get
            {
                return _Результат;
            }
            set
            {
                OnРезультатChanging(value);
                ReportPropertyChanging("Результат");
                _Результат = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Результат");
                OnРезультатChanged();
            }
        }
        private global::System.String _Результат;
        partial void OnРезультатChanging(global::System.String value);
        partial void OnРезультатChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Направление_в_ОВД
        {
            get
            {
                return _Направление_в_ОВД;
            }
            set
            {
                OnНаправление_в_ОВДChanging(value);
                ReportPropertyChanging("Направление_в_ОВД");
                _Направление_в_ОВД = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Направление_в_ОВД");
                OnНаправление_в_ОВДChanged();
            }
        }
        private global::System.String _Направление_в_ОВД;
        partial void OnНаправление_в_ОВДChanging(global::System.String value);
        partial void OnНаправление_в_ОВДChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Примечание
        {
            get
            {
                return _Примечание;
            }
            set
            {
                OnПримечаниеChanging(value);
                ReportPropertyChanging("Примечание");
                _Примечание = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Примечание");
                OnПримечаниеChanged();
            }
        }
        private global::System.String _Примечание;
        partial void OnПримечаниеChanging(global::System.String value);
        partial void OnПримечаниеChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrgSQLModel", "FK_Розыск_Prizivnik", "Prizivnik")]
        public Призывник Prizivnik
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Призывник>("OrgSQLModel.FK_Розыск_Prizivnik", "Prizivnik").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Призывник>("OrgSQLModel.FK_Розыск_Prizivnik", "Prizivnik").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Призывник> PrizivnikReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Призывник>("OrgSQLModel.FK_Розыск_Prizivnik", "Prizivnik");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Призывник>("OrgSQLModel.FK_Розыск_Prizivnik", "Prizivnik", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OrgSQLModel", Name="ТипРодства")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ТипРодства : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ТипРодства.
        /// </summary>
        /// <param name="idТипа_Родства">Исходное значение свойства IdТипа_Родства.</param>
        public static ТипРодства CreateТипРодства(global::System.Int32 idТипа_Родства)
        {
            ТипРодства типРодства = new ТипРодства();
            типРодства.IdТипа_Родства = idТипа_Родства;
            return типРодства;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdТипа_Родства
        {
            get
            {
                return _IdТипа_Родства;
            }
            set
            {
                if (_IdТипа_Родства != value)
                {
                    OnIdТипа_РодстваChanging(value);
                    ReportPropertyChanging("IdТипа_Родства");
                    _IdТипа_Родства = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdТипа_Родства");
                    OnIdТипа_РодстваChanged();
                }
            }
        }
        private global::System.Int32 _IdТипа_Родства;
        partial void OnIdТипа_РодстваChanging(global::System.Int32 value);
        partial void OnIdТипа_РодстваChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Наименование
        {
            get
            {
                return _Наименование;
            }
            set
            {
                OnНаименованиеChanging(value);
                ReportPropertyChanging("Наименование");
                _Наименование = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Наименование");
                OnНаименованиеChanged();
            }
        }
        private global::System.String _Наименование;
        partial void OnНаименованиеChanging(global::System.String value);
        partial void OnНаименованиеChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OrgSQLModel", "IDРодства_ТипРодства", "Родитель")]
        public EntityCollection<Родитель> Родитель
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Родитель>("OrgSQLModel.IDРодства_ТипРодства", "Родитель");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Родитель>("OrgSQLModel.IDРодства_ТипРодства", "Родитель", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
